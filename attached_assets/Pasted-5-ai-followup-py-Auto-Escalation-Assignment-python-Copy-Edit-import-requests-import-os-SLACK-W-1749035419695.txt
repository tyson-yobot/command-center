5. ai_followup.py — Auto-Escalation + Assignment
python
Copy
Edit
import requests
import os

SLACK_WEBHOOK_URL = os.getenv("SLACK_ALERT_URL")
AIRTABLE_API_KEY = os.getenv("AIRTABLE_KEY")
BASE_ID = os.getenv("AIRTABLE_BASE_ID")
TABLE_NAME = "📌 Project Roadmap Tracker"

def escalate_to_rep(lead_info):
    # Example lead fields
    fields = {
        "🧠 Project Name": f"Follow-Up: {lead_info['name']}",
        "🎯 Triggered By": "AI Escalation",
        "📞 Contact Number": lead_info['phone'],
        "📩 Contact Email": lead_info['email'],
        "⚠️ Priority": "High"
    }
    headers = {
        "Authorization": f"Bearer {AIRTABLE_API_KEY}",
        "Content-Type": "application/json"
    }
    url = f"https://api.airtable.com/v0/{BASE_ID}/{TABLE_NAME}"
    requests.post(url, json={"fields": fields}, headers=headers)

    # Slack alert
    alert_msg = f"🛎️ AI escalated {lead_info['name']} ({lead_info['email']}) for manual follow-up."
    requests.post(SLACK_WEBHOOK_URL, json={"text": alert_msg})

def handler(request):
    lead = request.json
    escalate_to_rep(lead)
    log_command_center_event(f"🚨 Escalated lead: {lead.get('email')}")
    return {"status": "escalated"}
✅ 6. trigger_scrape_apollo.py — Apollo.io Scraper
python
Copy
Edit
import requests
import os

APOLLO_API_KEY = os.getenv("APOLLO_KEY")
AIRTABLE_API_KEY = os.getenv("AIRTABLE_KEY")
BASE_ID = os.getenv("AIRTABLE_BASE_ID")
TABLE_NAME = "🧠 Lead Engine"

def scrape_leads_from_apollo():
    headers = {
        "Authorization": f"Bearer {APOLLO_API_KEY}"
    }
    url = "https://api.apollo.io/v1/contacts/search?query=construction&limit=1"
    res = requests.get(url, headers=headers)
    res.raise_for_status()
    data = res.json()
    return data['contacts']

def push_to_airtable(lead):
    headers = {
        "Authorization": f"Bearer {AIRTABLE_API_KEY}",
        "Content-Type": "application/json"
    }
    fields = {
        "👤 Full Name": lead['name'],
        "📧 Email": lead['email'],
        "📞 Phone": lead.get('phone', ''),
        "🏢 Company": lead.get('organization', '')
    }
    url = f"https://api.airtable.com/v0/{BASE_ID}/{TABLE_NAME}"
    requests.post(url, json={"fields": fields}, headers=headers)

def handler(request):
    leads = scrape_leads_from_apollo()
    for lead in leads:
        push_to_airtable(lead)
        log_command_center_event(f"🧲 Apollo lead scraped: {lead['name']}")
    return {"scraped": len(leads)}
✅ 7. (Optional) Add voice trigger for follow-up escalation:
In voice_commands.py:

python
Copy
Edit
if "escalate lead" in voice_text.lower():
    requests.post("https://replit.yobot.bot/ai_followup", json={
        "name": "John Smith",
        "email": "john@example.com",
        "phone": "+15559998888"
    })
