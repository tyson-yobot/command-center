6. log_command_center_event()
Standardized logging to Airtable from the Command Center.

python
Copy
Edit
def log_command_center_event(category, detail, base_id, table_name, airtable_key):
    import requests
    from datetime import datetime

    url = f"https://api.airtable.com/v0/{base_id}/{table_name}"
    headers = {
        "Authorization": f"Bearer {airtable_key}",
        "Content-Type": "application/json"
    }
    payload = {
        "fields": {
            "📅 Timestamp": datetime.utcnow().isoformat(),
            "🔖 Category": category,
            "🧠 Detail": detail
        }
    }
    response = requests.post(url, headers=headers, json=payload)
    return response.json()
✅ 7. send_slack_alert()
Pushes notification to Slack via webhook.

python
Copy
Edit
def send_slack_alert(message, webhook_url):
    import requests
    payload = {"text": message}
    response = requests.post(webhook_url, json=payload)
    return response.text
✅ 8. update_contact_status_hubspot()
Updates lead/contact record status in HubSpot.

python
Copy
Edit
def update_contact_status_hubspot(contact_id, new_status, hubspot_key):
    import requests
    url = f"https://api.hubapi.com/crm/v3/objects/contacts/{contact_id}"
    headers = {
        "Authorization": f"Bearer {hubspot_key}",
        "Content-Type": "application/json"
    }
    payload = {"properties": {"lead_status": new_status}}
    response = requests.patch(url, headers=headers, json=payload)
    return response.json()
✅ 9. get_voicebot_script_by_industry()
Pulls dynamic script from Airtable based on selected industry.

python
Copy
Edit
def get_voicebot_script_by_industry(base_id, table_name, api_key, industry_name):
    import requests
    from urllib.parse import quote
    url = f"https://api.airtable.com/v0/{base_id}/{table_name}?filterByFormula=INDUSTRY='{quote(industry_name)}'"
    headers = {"Authorization": f"Bearer {api_key}"}
    response = requests.get(url, headers=headers)
    records = response.json().get("records", [])
    if records:
        return records[0]["fields"].get("🗣️ Script Text", "No script found.")
    return "No matching script."
✅ 10. fetch_scraped_leads_from_airtable()
Grabs latest scraped leads for call queue.

python
Copy
Edit
def fetch_scraped_leads_from_airtable(base_id, table_name, api_key, max_records=10):
    import requests
    url = f"https://api.airtable.com/v0/{base_id}/{table_name}?maxRecords={max_records}&view=Grid%20view"
    headers = {"Authorization": f"Bearer {api_key}"}
    response = requests.get(url, headers=headers)
    return response.json().get("records", [])