import requests, json
from fpdf import FPDF
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
import base64

# ----------------------------------
# üîê AUTH: TEMP ACCESS TOKEN
# (expires after 1 hr)
# Replace later with refresh token logic
# ----------------------------------
ACCESS_TOKEN = "ya29.a0AW4Xtxh3Ol7z5GXcB6jDg9zdaQzbrfJdKm1aklw4qsBJoS13GP0OQWassOF-6u_Att_H9uI0jH4VirY6k1RFWATG2UsdrGTFT4WrmZIy-NfmorqzrR9XY-HJntQkj1tAYr_rH-N3WJ1i_bOw7nL2HAHB2gdqSbTM-5RZsWn6aCgYKAewSARMSFQHGX2Mi2BigMOSRyvdyL4y2bNOt0Q0175"

# ----------------------------------
# üìã FORM DATA (Simulated from Tally)
# In production: replace these with parsed values
# ----------------------------------
client_name = "Tyson Lerfald"
client_email = "tyson@yobot.bot"  # Replace with form-parsed email in production
bot_package = "Platinum"
addons = ["SmartSpend‚Ñ¢", "CRM Sync", "VoiceBot"]
total_cost = "$25,000 setup + $1,999/mo"

# ----------------------------------
# üìÅ 1. Create Google Drive Folder
# ----------------------------------
folder_metadata = {
    "name": f"YoBot - {client_name}",
    "mimeType": "application/vnd.google-apps.folder"
}
res = requests.post(
    "https://www.googleapis.com/drive/v3/files",
    headers={
        "Authorization": f"Bearer {ACCESS_TOKEN}",
        "Content-Type": "application/json"
    },
    json=folder_metadata
)
folder_id = res.json().get("id")
assert folder_id, f"‚ùå Folder creation failed: {res.text}"
print("üìÅ Folder created:", folder_id)

# ----------------------------------
# üßæ 2. Generate PDF Quote
# ----------------------------------
pdf = FPDF()
pdf.add_page()
pdf.set_font("Arial", size=12)
pdf.cell(200, 10, txt=f"YoBot Quote for {client_name}", ln=True)
pdf.cell(200, 10, txt="", ln=True)
pdf.cell(200, 10, txt=f"Bot Package: {bot_package}", ln=True)
pdf.cell(200, 10, txt=f"Add-ons: {', '.join(addons)}", ln=True)
pdf.cell(200, 10, txt=f"Total: {total_cost}", ln=True)
pdf.output("quote.pdf")
print("üßæ PDF generated")

# ----------------------------------
# üì§ 3. Upload PDF to Drive Folder
# ----------------------------------
upload_url = "https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart"
metadata = {
    "name": "YoBot_Quote.pdf",
    "parents": [folder_id]
}
files = {
    "data": ("metadata", json.dumps(metadata), "application/json"),
    "file": open("quote.pdf", "rb")
}
res = requests.post(
    upload_url,
    headers={"Authorization": f"Bearer {ACCESS_TOKEN}"},
    files=files
)
file_id = res.json().get("id")
assert file_id, f"‚ùå Upload failed: {res.text}"
print("üì§ PDF uploaded:", file_id)

# ----------------------------------
# ‚úâÔ∏è 4. Email Client PDF Link
# ----------------------------------
drive_url = f"https://drive.google.com/file/d/{file_id}/view"
message = MIMEMultipart("alternative")
message["Subject"] = "Your YoBot Quote"
message["To"] = client_email
message["From"] = "me"

html = f"""
<html>
  <body>
    <p>Hi {client_name},<br><br>
       Your YoBot quote is ready!<br>
       <a href="{drive_url}">Click here to view your PDF</a><br><br>
       Thank you,<br>
       The YoBot Team
    </p>
  </body>
</html>
"""

message.attach(MIMEText(html, "html"))
encoded = base64.urlsafe_b64encode(message.as_bytes()).decode()

res = requests.post(
    "https://gmail.googleapis.com/gmail/v1/users/me/messages/send",
    headers={
        "Authorization": f"Bearer {ACCESS_TOKEN}",
        "Content-Type": "application/json"
    },
    json={"raw": encoded}
)

assert res.status_code == 200, f"‚ùå Email failed: {res.text}"
print("‚úâÔ∏è Email sent to", client_email)