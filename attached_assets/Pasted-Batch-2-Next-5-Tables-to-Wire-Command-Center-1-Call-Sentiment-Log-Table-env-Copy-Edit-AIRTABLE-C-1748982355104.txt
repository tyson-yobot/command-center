Batch 2: Next 5 Tables to Wire (Command Center)
1. Call Sentiment Log Table
env
Copy
Edit
AIRTABLE_CALL_SENTIMENT_BASE_ID=appRt8V3tH4g5Z51f
AIRTABLE_CALL_SENTIMENT_TABLE_ID=tblWlCR2jU9u9lP4L
python
Copy
Edit
def log_call_sentiment(call_id, bot_name, intent, sentiment_score, highlights, negatives, qa_status, reviewed_by="Tyson"):
    import requests, os
    from datetime import datetime
    payload = {
        "fields": {
            "📞 Call ID": call_id,
            "🧠 Bot Name": bot_name,
            "🎯 Intent": intent,
            "📊 Sentiment Score": sentiment_score,
            "🔍 Highlights": highlights,
            "📉 Negatives": negatives,
            "📅 Date": datetime.utcnow().isoformat(),
            "🧪 QA Status": qa_status,
            "👤 Reviewed By": reviewed_by
        }
    }
    requests.post(
        f"https://api.airtable.com/v0/{os.getenv('AIRTABLE_CALL_SENTIMENT_BASE_ID')}/{os.getenv('AIRTABLE_CALL_SENTIMENT_TABLE_ID')}",
        headers={"Authorization": f"Bearer {os.getenv('AIRTABLE_API_KEY')}", "Content-Type": "application/json"},
        json=payload
    )
2. Escalation Tracker Table
env
Copy
Edit
AIRTABLE_ESCALATION_BASE_ID=appRt8V3tH4g5Z51f
AIRTABLE_ESCALATION_TABLE_ID=tblidfv59ZR5wjghJ
python
Copy
Edit
def log_escalation(ticket_id, reason, escalated_by, timestamp=None):
    import requests, os
    from datetime import datetime
    payload = {
        "fields": {
            "🎫 Ticket ID": ticket_id,
            "📣 Reason": reason,
            "👤 Escalated By": escalated_by,
            "📅 Time": timestamp or datetime.utcnow().isoformat()
        }
    }
    requests.post(
        f"https://api.airtable.com/v0/{os.getenv('AIRTABLE_ESCALATION_BASE_ID')}/{os.getenv('AIRTABLE_ESCALATION_TABLE_ID')}",
        headers={"Authorization": f"Bearer {os.getenv('AIRTABLE_API_KEY')}", "Content-Type": "application/json"},
        json=payload
    )
3. Client Touchpoint Log Table
env
Copy
Edit
AIRTABLE_TOUCHPOINTS_BASE_ID=appRt8V3tH4g5Z51f
AIRTABLE_TOUCHPOINTS_TABLE_ID=tblNUgUPNWROVyzzy
python
Copy
Edit
def log_touchpoint(client_name, contact_type, notes, agent="Tyson"):
    import requests, os
    from datetime import datetime
    payload = {
        "fields": {
            "🏢 Client Name": client_name,
            "📞 Contact Type": contact_type,
            "📝 Notes": notes,
            "📅 Date": datetime.utcnow().isoformat(),
            "👤 Agent": agent
        }
    }
    requests.post(
        f"https://api.airtable.com/v0/{os.getenv('AIRTABLE_TOUCHPOINTS_BASE_ID')}/{os.getenv('AIRTABLE_TOUCHPOINTS_TABLE_ID')}",
        headers={"Authorization": f"Bearer {os.getenv('AIRTABLE_API_KEY')}", "Content-Type": "application/json"},
        json=payload
    )
4. Missed Call Log Table
env
Copy
Edit
AIRTABLE_MISSED_CALLS_BASE_ID=appRt8V3tH4g5Z51f
AIRTABLE_MISSED_CALLS_TABLE_ID=tblFqDhRMnMS22ngE
python
Copy
Edit
def log_missed_call(client_name, phone_number, reason, bot_name):
    import requests, os
    from datetime import datetime
    payload = {
        "fields": {
            "🏢 Client Name": client_name,
            "📞 Phone Number": phone_number,
            "❌ Missed Reason": reason,
            "🤖 Bot Name": bot_name,
            "📅 Time": datetime.utcnow().isoformat()
        }
    }
    requests.post(
        f"https://api.airtable.com/v0/{os.getenv('AIRTABLE_MISSED_CALLS_BASE_ID')}/{os.getenv('AIRTABLE_MISSED_CALLS_TABLE_ID')}",
        headers={"Authorization": f"Bearer {os.getenv('AIRTABLE_API_KEY')}", "Content-Type": "application/json"},
        json=payload
    )
5. QA Call Review Table
env
Copy
Edit
AIRTABLE_QA_REVIEW_BASE_ID=appRt8V3tH4g5Z51f
AIRTABLE_QA_REVIEW_TABLE_ID=tblgl8HRUdTBaRoK1
python
Copy
Edit
def log_qa_review(call_id, result, reviewer, notes):
    import requests, os
    from datetime import datetime
    payload = {
        "fields": {
            "📞 Call ID": call_id,
            "✅ Result": result,
            "👤 Reviewer": reviewer,
            "📝 Notes": notes,
            "📅 Date": datetime.utcnow().isoformat()
        }
    }
    requests.post(
        f"https://api.airtable.com/v0/{os.getenv('AIRTABLE_QA_REVIEW_BASE_ID')}/{os.getenv('AIRTABLE_QA_REVIEW_TABLE_ID')}",
        headers={"Authorization": f"Bearer {os.getenv('AIRTABLE_API_KEY')}", "Content-Type": "application/json"},
        json=payload
    )
