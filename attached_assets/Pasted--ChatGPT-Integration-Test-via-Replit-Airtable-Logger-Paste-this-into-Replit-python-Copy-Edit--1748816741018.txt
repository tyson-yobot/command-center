✅ ChatGPT Integration Test (via Replit) + Airtable Logger
Paste this into Replit:

python
Copy
Edit
import requests
from datetime import datetime

# Airtable Logging (same as before)
AIRTABLE_API_KEY = "your_airtable_key"
BASE_ID = "your_base_id"
TABLE_NAME = "🧪 Integration Test Log"

def log_test_to_airtable(name, status, notes, module_type="LLM", link=""):
    url = f"https://api.airtable.com/v0/{BASE_ID}/{TABLE_NAME}"
    headers = {
        "Authorization": f"Bearer {AIRTABLE_API_KEY}",
        "Content-Type": "application/json"
    }
    data = {
        "fields": {
            "🔧 Integration Name": name,
            "✅ Pass/Fail": status,
            "🧠 Notes / Debug": notes,
            "📅 Test Date": datetime.today().strftime("%Y-%m-%d"),
            "🧑‍💻 QA Owner": "Tyson",
            "📤 Output Data Populated": True,
            "🗃️ Record Created?": True,
            "🔁 Retry Attempted?": False,
            "🧩 Module Type": module_type,
            "📂 Related Scenario Link": link
        }
    }
    r = requests.post(url, headers=headers, json=data)
    print("✅ Airtable log posted" if r.status_code == 200 else f"❌ Airtable log failed: {r.status_code} {r.text}")

# ChatGPT Integration Test
def test_chatgpt_response():
    try:
        url = "https://api.openai.com/v1/chat/completions"
        headers = {
            "Authorization": "Bearer your_openai_key",
            "Content-Type": "application/json"
        }
        data = {
            "model": "gpt-4",
            "messages": [
                {"role": "system", "content": "You are a helpful assistant."},
                {"role": "user", "content": "What is the capital of France?"}
            ]
        }

        r = requests.post(url, headers=headers, json=data)

        if r.status_code == 200:
            reply = r.json()["choices"][0]["message"]["content"]
            print("✅ ChatGPT replied:", reply)
            log_test_to_airtable("ChatGPT Integration", "✅", reply)
        else:
            raise Exception(f"ChatGPT error: {r.status_code} {r.text}")
    except Exception as e:
        log_test_to_airtable("ChatGPT Integration", "❌", str(e))

test_chatgpt_response()