Apollo.io Scraper Filter Panel (React + Tailwind, Copy-Paste Ready)
Paste this into Replit and wire it to state + scraper launch. I'll do Apify + Phantom next if you want.

jsx
Copy
Edit
import { useState } from "react";

export default function ApolloScraperPanel() {
  const [filters, setFilters] = useState({
    jobTitles: "",
    industry: "",
    location: "",
    companySize: "",
    fundingStage: "",
    revenueRange: "",
    emailVerifiedOnly: true,
    phoneAvailableOnly: false,
  });

  function handleChange(e) {
    const { name, value, type, checked } = e.target;
    setFilters({
      ...filters,
      [name]: type === "checkbox" ? checked : value,
    });
  }

  function handleSubmit() {
    // POST to backend endpoint here
    fetch("/api/launch-scrape", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        tool: "apollo",
        filters,
      }),
    }).then(res => console.log("Launched!", res));
  }

  return (
    <div className="bg-gray-900 text-white rounded-xl p-6 shadow-lg space-y-4">
      <h2 className="text-2xl font-semibold">🔵 Apollo.io Filters</h2>

      <div className="grid grid-cols-2 gap-4">
        <input
          type="text"
          name="jobTitles"
          placeholder="🎯 Job Titles (e.g. Owner, Manager)"
          value={filters.jobTitles}
          onChange={handleChange}
          className="p-2 rounded bg-gray-800 w-full"
        />

        <input
          type="text"
          name="industry"
          placeholder="🏭 Industry (e.g. Real Estate)"
          value={filters.industry}
          onChange={handleChange}
          className="p-2 rounded bg-gray-800 w-full"
        />

        <input
          type="text"
          name="location"
          placeholder="🌍 Location (City, State, etc.)"
          value={filters.location}
          onChange={handleChange}
          className="p-2 rounded bg-gray-800 w-full"
        />

        <select
          name="companySize"
          value={filters.companySize}
          onChange={handleChange}
          className="p-2 rounded bg-gray-800 w-full"
        >
          <option value="">🏢 Company Size</option>
          <option value="1-10">1–10</option>
          <option value="11-50">11–50</option>
          <option value="51-200">51–200</option>
          <option value="201-500">201–500</option>
          <option value="500+">500+</option>
        </select>

        <select
          name="fundingStage"
          value={filters.fundingStage}
          onChange={handleChange}
          className="p-2 rounded bg-gray-800 w-full"
        >
          <option value="">💰 Funding Stage</option>
          <option value="Seed">Seed</option>
          <option value="Series A">Series A</option>
          <option value="Series B">Series B</option>
          <option value="Series C+">Series C+</option>
          <option value="Public">Public</option>
        </select>

        <select
          name="revenueRange"
          value={filters.revenueRange}
          onChange={handleChange}
          className="p-2 rounded bg-gray-800 w-full"
        >
          <option value="">📊 Revenue Range</option>
          <option value="0-1M">0–1M</option>
          <option value="1–10M">1–10M</option>
          <option value="10–50M">10–50M</option>
          <option value="50M+">50M+</option>
        </select>
      </div>

      <div className="flex items-center gap-6 pt-4">
        <label className="flex items-center gap-2">
          <input
            type="checkbox"
            name="emailVerifiedOnly"
            checked={filters.emailVerifiedOnly}
            onChange={handleChange}
          />
          ✅ Email Verified Only
        </label>

        <label className="flex items-center gap-2">
          <input
            type="checkbox"
            name="phoneAvailableOnly"
            checked={filters.phoneAvailableOnly}
            onChange={handleChange}
          />
          📞 Phone Available
        </label>
      </div>

      <button
        onClick={handleSubmit}
        className="mt-6 bg-blue-600 hover:bg-blue-500 text-white font-semibold py-2 px-6 rounded-xl"
      >
        🚀 Launch Apollo Scraper
      </button>
    </div>
  );
}
✅ What This Does:
Clean Apollo filter UI using Tailwind

Controlled input fields for filter values

Toggle fields for "email verified" and "phone available"

Launches POST /api/launch-scrape with clean JSON