5. Missed Call → Auto-Responder Module
Trigger: Inbound call missed (Webhook logs status=missed in 📥 Inbound Call Log)

Action:

Auto-send SMS via Twilio:

python
Copy
Edit
send_sms(
    to=parsed["📞 Caller Number"],
    message="Sorry we missed your call! This is YoBot® — how can we help? You can text us here or schedule time: https://yobot.bot/book"
)
Log message sent to 📞 Missed Call Log

✅ 6. Missed Call → Follow-Up Tracker
Trigger: Same as above

Action:

Create record in: ✅ Follow-Up Reminder Tracker

🧠 Reason: “Missed Call”

📝 Assigned Rep: “Daniel Sharpe”

📅 Due Date: today + 1 day

📞 Contact: Link to CRM Contact Log if number matches

✅ 7. Fallback Field Enrichment (Apollo Scrape)
Issue: Some Apollo records missing phone/email

Solution:

When email or phone is null, run:

Fallback logic:

python
Copy
Edit
if not phone:
    phone = search_fallback_phone(company_name, first_name)
if not email:
    email = search_fallback_email(domain, first_name, last_name)
✅ 8. Skip Empty Scrape Rows
Trigger: Apollo or Phantombuster scrape

Condition: If both email AND phone are missing

Action:

python
Copy
Edit
if not phone and not email:
    skip_record()
Prevents junk leads from hitting Airtable/HubSpot

✅ 9. Auto-Tag Lead Source
Action: On every inbound webhook, populate hidden field:

📣 Lead Source:

“Platinum Promo” → /api/leads/promo

“ROI Snapshot” → /api/leads/roi

“Contact Us” → /api/contact/message

Set this field in CRM Contact Log

✅ 10. Hidden Field Injection in Tally
Tally Forms: Add a hidden field in every form:

Lead Source = “Platinum Promo” (etc.)

That gets mapped into Replit → Airtable

✅ 11. SmartSpend™ Auto-Log to Metrics
When: SmartSpend Charge webhook hits

Action:

Log to 📊 Metrics Tracker:

🧠 Function: "SmartSpend Charge"

📥 Source Form: "SmartSpend Intake"

📊 Dashboard Name: “SmartSpend™”

📅 Timestamp: UTC now

✅ 12. Feature Request Tracking Tag
Table: 📣 Feature Request Log

New Field: 📌 Category Tag (Single Select)

“Dashboard”, “Bot Logic”, “Add-On”, “Tally Form”, “Replit Module”, “Other”

Auto-assign based on keyword logic from the request body

✅ 13. Internal Notes Field in CRM
Add to Table: CRM Contact Log

Field: 🗒 Internal Notes (Long Text)

Usage:

Auto-populate context like:

"Lead from ROI Snapshot • Interested in SmartSpend™ • 3 bots discussed"

✅ 14. Auto-Log Error Events to Metrics
Trigger: Any try/except block

On exception:

python
Copy
Edit
log_metric({
  "🧠 Function Name": "Lead Capture",
  "📊 Dashboard Name": "Lead Engine",
  "📅 Timestamp": datetime.utcnow().isoformat(),
  "📕 Error Type": str(e.__class__.__name__),
  "📛 Error Message": str(e),
})
Log these in 📊 Metrics Tracker under a new view: Errors Only

