FINAL RESTORATION INSTRUCTION: Lead Scraper Must Be Fully Functional (No Static Data)
🛑 Problem:
The current build is incorrectly routing to a pre-filled results screen with fake/test contacts. This is not connected to any live scraping system, which violates the required automation spec and misrepresents functionality during demo and client use.

✅ This is the Required Behavior Flow (Restore Exactly as Built):
1️⃣ Platform Selection Screen
Should match the visual design of the attached screenshot with glowing gradient cards and platform branding.

All 6 cards must be responsive, animated on hover, and aligned in a grid.

Each card must trigger its platform-specific config screen.

✅ Visual reference: enterprise-lead-intel-platform-final.png

2️⃣ Configuration Screen (e.g. Apollo.io Professional Configuration)
Should not alter any field layouts.

Buttons Save Preset and Launch Apollo Scraper must:

Call a real backend trigger

Send data to Make, AWS Lambda, or server scraper endpoint

Return response via webhook, not redirect instantly

✅ Visual reference: apollo-config-final.png

3️⃣ Results Screen (After Scraper Completes)
Must only be shown after scraper has actually run and Airtable/DB contains results.

✅ Show:

Slack confirmation

View in Airtable button (live link)

CSV Export (only if results exist)

❌ DO NOT SHOW hardcoded contacts like "Sarah Thompson", "John Johnson", etc.

❌ DO NOT preload fake or placeholder data — live mode must be clean.

✅ Visual reference: intelligence-results-final.png

⚙️ Technical Logic Enforcement (Copy Into Codebase)
tsx
Copy
Edit
// live check - NO FAKE DATA
if (ENV === 'production' && leads.length === 0) {
  return <EmptyState message="No leads available. Please run a scraper first." />
}
tsx
Copy
Edit
// launch scraper trigger
const handleLaunchScraper = async () => {
  const response = await fetch('/api/scrape', {
    method: 'POST',
    body: JSON.stringify(config),
  });

  if (!response.ok) {
    return showError("Scraper failed to trigger. Try again.");
  }

  setLoading(true);
  // wait for webhook to confirm → then show results
};
✅ Final Required Commit from Replit Dev Team:
🔁 Hook “Launch” buttons to live APIs or Make webhooks

🧼 Remove all test data from results screen

🔐 Lock results behind post-scrape confirmation only

💾 Save all 3 final screens visually, including style consistency

📤 Send Tyson full backup of lead-scraper.tsx, config pages, and results screen for archive

