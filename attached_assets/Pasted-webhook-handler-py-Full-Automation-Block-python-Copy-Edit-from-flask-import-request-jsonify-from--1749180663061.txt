webhook_handler.py – Full Automation Block
python
Copy
Edit
from flask import request, jsonify
from your_helpers import (
    create_client_folder, generate_quote_number, generate_quote_pdf,
    send_quote_email, load_task_templates, filter_tasks, post_tasks_to_airtable,
    create_hubspot_contact, create_qbo_invoice
)

@app.route('/webhook/sales_order', methods=['POST'])
def handle_sales_order():
    data = request.json

    # 🌐 Parse webhook inputs
    company_name = data["Parsed Company Name"]
    contact_email = data["Parsed Contact Email"]
    first_name = data.get("Parsed First Name", "Client")
    last_name = data.get("Parsed Last Name", "")
    selected_package = data["Parsed Package"]
    selected_addons = data["Parsed Add-Ons"]  # List
    industry = data["Parsed Industry"]
    total_paid = float(data["Parsed Total Paid"])
    due_date = data.get("Parsed Due Date", "2025-06-15")  # fallback

    # 🗂️ Create Google Drive folder
    folder_id = create_client_folder(company_name)

    # 🧾 Generate quote number
    quote_number = generate_quote_number(company_name)

    # 📄 Generate PDF
    pdf_path = generate_quote_pdf(company_name, quote_number, "./quotes", selected_addons, total_paid)

    # 📧 Email PDF
    send_quote_email(
        sender_email=os.getenv("GMAIL_USER"),
        app_password=os.getenv("GMAIL_APP_PASSWORD"),
        receiver_email=contact_email,
        subject=f"Your Quote {quote_number} from YoBot®",
        body="Hi! Please find your quote attached.\n\n— YoBot Team",
        pdf_path=pdf_path
    )

    # 📌 Create tasks in Airtable
    template = load_task_templates(base_id=os.getenv("AIRTABLE_BASE_ID"), table_name="📑 Task Template Table", api_key=os.getenv("AIRTABLE_API_KEY"))
    filtered_tasks = filter_tasks(template, selected_package, selected_addons, industry)
    post_tasks_to_airtable(
        base_id=os.getenv("AIRTABLE_BASE_ID"),
        roadmap_table_name="📌 Project Roadmap Tracker",
        api_key=os.getenv("AIRTABLE_API_KEY"),
        filtered_tasks=filtered_tasks,
        client_name=company_name,
        quote_number=quote_number
    )

    # 🤝 HubSpot Contact
    create_hubspot_contact(contact_email, first_name, last_name, company_name, api_key=os.getenv("HUBSPOT_API_KEY"))

    # 🧾 QuickBooks Invoice
    create_qbo_invoice(
        qbo_access_token=os.getenv("QBO_ACCESS_TOKEN"),
        company_id=os.getenv("QBO_COMPANY_ID"),
        customer_id=data["QBO Customer ID"],
        amount=total_paid,
        due_date=due_date,
        description=quote_number
    )

    return jsonify({"status": "success", "quote": quote_number})
