import { useState } from "react";

export default function PhantomBusterScraperPanel() {
  const [filters, setFilters] = useState({
    connectionDegree: "2nd",
    jobTitles: "",
    industries: "",
    location: "",
    companySize: "",
    autoConnect: false,
    connectMessage: "",
    retryAttempts: 1,
    mode: "Phantom"
  });

  function handleChange(e) {
    const { name, value, type, checked } = e.target;
    setFilters({
      ...filters,
      [name]: type === "checkbox" ? checked : value,
    });
  }

  function handleSubmit() {
    fetch("/api/launch-scrape", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        tool: "phantombuster",
        filters,
      }),
    }).then(res => console.log("Phantom launched!", res));
  }

  return (
    <div className="bg-gray-900 text-white rounded-xl p-6 shadow-lg space-y-4">
      <h2 className="text-2xl font-semibold">\ud83d\udd39 PhantomBuster Filters</h2>

      <div className="grid grid-cols-2 gap-4">
        <select
          name="connectionDegree"
          value={filters.connectionDegree}
          onChange={handleChange}
          className="p-2 rounded bg-gray-800 w-full"
        >
          <option value="1st">1st Degree</option>
          <option value="2nd">2nd Degree</option>
          <option value="3rd">3rd Degree</option>
        </select>

        <input
          type="text"
          name="jobTitles"
          placeholder="\ud83c\udf1f Job Titles (e.g. Founder)"
          value={filters.jobTitles}
          onChange={handleChange}
          className="p-2 rounded bg-gray-800 w-full"
        />

        <input
          type="text"
          name="industries"
          placeholder="\ud83c\udfed Industries (comma separated)"
          value={filters.industries}
          onChange={handleChange}
          className="p-2 rounded bg-gray-800 w-full"
        />

        <input
          type="text"
          name="location"
          placeholder="\ud83c\udf0d Location (City, State)"
          value={filters.location}
          onChange={handleChange}
          className="p-2 rounded bg-gray-800 w-full"
        />

        <select
          name="companySize"
          value={filters.companySize}
          onChange={handleChange}
          className="p-2 rounded bg-gray-800 w-full"
        >
          <option value="">\ud83c\udfe2 Company Size</option>
          <option value="1-10">1–10</option>
          <option value="11-50">11–50</option>
          <option value="51-200">51–200</option>
          <option value="201-500">201–500</option>
          <option value="500+">500+</option>
        </select>

        <select
          name="mode"
          value={filters.mode}
          onChange={handleChange}
          className="p-2 rounded bg-gray-800 w-full"
        >
          <option value="Phantom">Use Phantom</option>
          <option value="API">Use API</option>
        </select>
      </div>

      <div className="space-y-4 pt-4">
        <label className="flex items-center gap-2">
          <input
            type="checkbox"
            name="autoConnect"
            checked={filters.autoConnect}
            onChange={handleChange}
          />
          \ud83d\udcde Auto-connect with message
        </label>

        {filters.autoConnect && (
          <textarea
            name="connectMessage"
            placeholder="\u2709\ufe0f Connection Message..."
            value={filters.connectMessage}
            onChange={handleChange}
            rows={3}
            className="w-full p-2 rounded bg-gray-800"
          />
        )}

        <label className="block">
          \u267b\ufe0f Retry Attempts:
          <input
            type="number"
            name="retryAttempts"
            value={filters.retryAttempts}
            onChange={handleChange}
            className="p-2 rounded bg-gray-800 w-full mt-1"
            min="0"
            max="10"
          />
        </label>
      </div>

      <button
        onClick={handleSubmit}
        className="mt-6 bg-purple-600 hover:bg-purple-500 text-white font-semibold py-2 px-6 rounded-xl"
      >
        \ud83d\ude80 Launch Phantom Scraper
      </button>
    </div>
  );
}
