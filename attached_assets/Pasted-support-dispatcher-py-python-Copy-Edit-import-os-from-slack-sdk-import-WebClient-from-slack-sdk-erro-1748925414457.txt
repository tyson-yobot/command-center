support_dispatcher.py
python
Copy
Edit
import os
from slack_sdk import WebClient
from slack_sdk.errors import SlackApiError
from pyairtable import Table
from datetime import datetime

# === CONFIGURATION ===
SLACK_TOKEN = "xRYo7LD89mNz2EvZy3kOrFiv"
SLACK_CHANNEL = "#support-queue"  # Change if needed

AIRTABLE_API_KEY = "patQdihpuEhLfx2vP"
AIRTABLE_BASE_ID = "appCoAtCZdARb4AM2"
AIRTABLE_TABLE_ID = "tblQPr9cHyNZDpipS"

VOICE_FILE_PATH = "./uploads/test_yobot_voice.mp3"  # Local MP3 path

# === INITIALIZE CLIENTS ===
slack_client = WebClient(token=SLACK_TOKEN)
airtable = Table(AIRTABLE_API_KEY, AIRTABLE_BASE_ID, AIRTABLE_TABLE_ID)

# === MAIN FUNCTION ===
def dispatch_support_response(ticket):
    try:
        ticket_id = ticket["ticketId"]
        client_name = ticket["clientName"]
        topic = ticket["topic"]
        ai_reply = ticket["aiReply"]
        escalation_flag = ticket["escalationFlag"]
        sentiment = ticket["sentiment"]

        # 1. Post Slack message
        slack_text = f"*ðŸŽŸ AI Reply for Ticket `{ticket_id}`*\n*Client:* {client_name}\n*Topic:* {topic}\n> {ai_reply}"
        slack_client.chat_postMessage(channel=SLACK_CHANNEL, text=slack_text)

        # 2. Upload MP3 to Slack
        upload = slack_client.files_upload(
            channels=SLACK_CHANNEL,
            file=VOICE_FILE_PATH,
            filename=f"{ticket_id}_reply.mp3",
            title="ðŸŽ§ Voice Reply",
            initial_comment="Hereâ€™s the MP3 reply from YoBot ðŸŽ™"
        )
        mp3_url = upload["file"]["permalink"]

        # 3. Log to Airtable
        airtable.create({
            "ðŸ†” Ticket ID": ticket_id,
            "ðŸ§‘ Client Name": client_name,
            "ðŸ“Œ Topic": topic,
            "ðŸ¤– AI Reply": ai_reply,
            "ðŸš© Escalation Flag": escalation_flag,
            "ðŸ“‰ Sentiment": sentiment,
            "ðŸŽ§ Voice File": mp3_url
        })

        print(f"[{datetime.now()}] âœ… Support ticket dispatched: {ticket_id}")

    except SlackApiError as e:
        print(f"[Slack Error] {e.response['error']}")
    except Exception as e:
        print(f"[Airtable/Error] {e}")
âœ… HOW TO USE IT IN REPLIT
Save this as support_dispatcher.py

In your webhook or main handler file (e.g., webhook_handler.py), import and call like this:

python
Copy
Edit
from support_dispatcher import dispatch_support_response

# Sample test payload
ticket = {
    "ticketId": "TCK-1234",
    "clientName": "Ava Fields",
    "topic": "Bot Not Responding",
    "aiReply": "We've reconnected your bot and it's back online.",
    "escalationFlag": True,
    "sentiment": "Negative"
}

dispatch_support_response(ticket)