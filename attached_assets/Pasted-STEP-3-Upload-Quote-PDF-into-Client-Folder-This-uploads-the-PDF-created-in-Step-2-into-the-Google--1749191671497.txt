STEP 3 ‚Äî Upload Quote PDF into Client Folder
This uploads the PDF created in Step 2 into the Google Drive folder created in Step 1 (Company Name inside 1. Clients):

python
Copy
Edit
def upload_pdf_to_folder(drive, folder_id, filepath, filename):
    file_metadata = {
        'title': filename,
        'parents': [{'id': folder_id}]
    }
    file = drive.CreateFile(file_metadata)
    file.SetContentFile(filepath)
    file.Upload()
    print(f'‚úÖ Uploaded PDF: {filename} to folder ID: {folder_id}')
    return file['id']
Usage (after Step 1 & 2):

python
Copy
Edit
folder_id = create_client_folder(company_name)
pdf_path = generate_quote_pdf(company_name, quote_id, ...)
upload_pdf_to_folder(drive, folder_id, pdf_path, f"{company_name} - {quote_id}.pdf")
‚úÖ STEP 4 ‚Äî Airtable Roadmap Tasks (Automation-First)
This script sends the automation-first tasks to your Airtable Task Table Template for the selected bot package and add-ons:

python
Copy
Edit
import requests

AIRTABLE_API_KEY = 'paty41tSgNrAPUQZV.7c0df078d76ad5bb4ad1f6be2adbf7e0dec16fd9073fbd51f7b64745953bddfa'
BASE_ID = 'appe0OSJtB1In1kn5'
TABLE_ID = 'tblakvT7m2dQOjlPC'

def post_task_to_airtable(task_name, phase, owner_type, applies_to, automation_notes):
    url = f'https://api.airtable.com/v0/{BASE_ID}/{TABLE_ID}'
    headers = {
        'Authorization': f'Bearer {AIRTABLE_API_KEY}',
        'Content-Type': 'application/json'
    }
    data = {
        "fields": {
            "Task Name": task_name,
            "Phase": phase,
            "Owner Type": owner_type,
            "Applies To": applies_to,
            "Automation Notes": automation_notes
        }
    }
    response = requests.post(url, headers=headers, json=data)
    if response.status_code == 200 or response.status_code == 201:
        print(f"‚úÖ Task sent to Airtable: {task_name}")
    else:
        print(f"‚ùå Failed to post task: {response.text}")
üß† Example Usage for Pro Bot Package:
python
Copy
Edit
post_task_to_airtable(
    task_name="Swap Slack webhook to client channel",
    phase="Setup",
    owner_type="‚úÖ SYSTEM",
    applies_to="Pro Bot",
    automation_notes="Replace Slack webhook using slack_webhook_swap(client_id)"
)

post_task_to_airtable(
    task_name="Update Command Center controls",
    phase="Branding",
    owner_type="‚úÖ SYSTEM",
    applies_to="Pro Bot",
    automation_notes="Update control JSON in Replit DB under /client/configs"
)
