1. trigger_sms.py
python
Copy
Edit
import requests
import os

TWILIO_ACCOUNT_SID = os.getenv("TWILIO_SID")
TWILIO_AUTH_TOKEN = os.getenv("TWILIO_AUTH")
TWILIO_FROM_NUMBER = os.getenv("TWILIO_FROM")
SLACK_WEBHOOK_URL = os.getenv("SLACK_ALERT_URL")

def send_sms(to_number, message):
    url = f"https://api.twilio.com/2010-04-01/Accounts/{TWILIO_ACCOUNT_SID}/Messages.json"
    data = {
        "To": to_number,
        "From": TWILIO_FROM_NUMBER,
        "Body": message
    }
    auth = (TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN)
    r = requests.post(url, data=data, auth=auth)
    return r.status_code, r.text

def handler(request):
    payload = request.json
    number = payload.get("number", "+15551234567")
    msg = payload.get("message", "📣 Your YoBot® demo is ready!")

    status, resp = send_sms(number, msg)
    
    log_command_center_event(f"📩 SMS sent to {number}: {msg}")
    return {"status": status, "response": resp}
✅ 2. trigger_email.py
python
Copy
Edit
import os
import requests

SENDGRID_API_KEY = os.getenv("SENDGRID_KEY")
FROM_EMAIL = "noreply@yobot.bot"
SLACK_WEBHOOK_URL = os.getenv("SLACK_ALERT_URL")

def send_email(to_email, subject, body):
    url = "https://api.sendgrid.com/v3/mail/send"
    headers = {
        "Authorization": f"Bearer {SENDGRID_API_KEY}",
        "Content-Type": "application/json"
    }
    data = {
        "personalizations": [{"to": [{"email": to_email}]}],
        "from": {"email": FROM_EMAIL},
        "subject": subject,
        "content": [{"type": "text/plain", "value": body}]
    }
    r = requests.post(url, json=data, headers=headers)
    return r.status_code, r.text

def handler(request):
    data = request.json
    email = data.get("email", "demo@yobot.bot")
    subject = data.get("subject", "Thanks for checking out YoBot®!")
    body = data.get("body", "We’ll be in touch shortly. – The YoBot® Team")

    status, resp = send_email(email, subject, body)
    log_command_center_event(f"📧 Email sent to {email}: {subject}")
    return {"status": status, "response": resp}
✅ 3. log_command_center_event() (shared utility)
If not already global:

python
Copy
Edit
import datetime

def log_command_center_event(event_msg):
    print(f"[{datetime.datetime.now()}] {event_msg}")
    # Optional: push to Airtable or Replit DB here
✅ 4. Frontend Trigger Summary
Button	Endpoint	Notes
📞 Initiate Call	/trigger_call_lead	Already built & tested
📩 Send SMS	/trigger_sms	Manual or AI-driven
📧 Send Email	/trigger_email	Templated or custom input
🔄 Manual Follow-Up	/trigger_followup	Assign task / escalate
🔍 Start Scraping	/trigger_scrape_leads	Apollo / Phantombuster

Each button = POST JSON with input fields (or use defaults for now).

