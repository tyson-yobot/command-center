✅ PRIORITY BUTTONS (TOP ROW)
1. 🎙️ Start Voice Command
Function: Activates the bot’s listening state.

How It Should Work:

Shows a “🎤 Speak Now…” label

Mic icon animates or pulses while listening

Times out after ~10 seconds or on command match

Wire to Airtable: Not needed directly.

Wire in Replit:

Frontend: Show mic animation, placeholder response

Backend: Send audio → Lambda → Whisper for transcription

Trigger webhook with parsed text → Command interpreter

2. 📞 Start Pipeline Calls
Function: Kicks off outbound call automation (cold call pipeline)

How It Should Work:

When clicked, checks Airtable for list of leads to call

Begins calling in sequence

Card shows: “Calls in Progress: X / Calls Today: Y”

Wire to Airtable: 📞 Voice Call Log + 🎯 Lead Qualification Tracker

Wire in Replit:

Trigger outbound call handler (Twilio/AWS Lambda)

Log results to Airtable

3. 📤 Upload Calendar
REMOVE — it's misleading and wired to file explorer.

Replace With: A link/button inside the 📆 Smart Calendar card to connect Google/Outlook Calendar.

Alternative: OAuth popup → store token in 🔗 Integration Sync Tracker

4. 📈 Generate Analytics Report
Function: Opens modal to choose report type (e.g. Conversion, Sales, Voice, Bot Usage)

Ideal UX:

Modal popup with dropdown for report type

“Save as PDF” or “View on screen” toggle

Wire to Airtable: 🧮 Botalytics Monthly Log, 📊 Call Sentiment Log, 📞 Voice Call Log

Wire in Replit:

Query Airtable based on report type

Create summary data

Generate PDF using server-side lib (e.g. pdfkit, WeasyPrint)

Offer file download

📊 CARDS / TILES — FUNCTIONALITY & DATA WIRING
🟩 Voice Analytics Card
Fields:

☎️ Calls Today

⏱ Avg Duration

✅ Conversion Rate

📈 Success %

❌ Failure %

Wire to Airtable: 📞 Voice Call Log, 🎯 Lead Qualification Tracker

How it should work:

Pull today's records

Do backend aggregation → pass to frontend as live stats

📆 Smart Calendar
Current Status: Too large, no functionality

How to Fix:

Reduce to compact 2-week view

Remove upload button

Add “Connect Calendar” button → launches OAuth to sync

Wire to Airtable: 📆 Booking Requests Log (optional)

Wire to Platform: Google/Outlook API via Lambda or Render

📋 Active Calls / ⏳ Pending Calls / ✅ Completed Calls
Wire to Airtable: 📞 Voice Call Log

Behavior:

Count of records by call status

Show real-time numbers via live polling or WebSocket stream

💬 Recent Command History
Wire to Airtable: 🧠 NLP Keyword Tracker or voice logs table

Behavior: Display last 5-10 interpreted user commands and how they were handled

🛠️ QA Log / Sentiment Card
Wire to Airtable: 🧪 QA Call Review Log, 📊 Call Sentiment Log

Behavior: Show sentiment bar (green/yellow/red), average review score, and flagged issues

💰 Sales & Revenue Metrics
Wire to Airtable: 🧾 Sales Orders, QuickBooks Sync

Behavior:

Today’s Sales

MRR

Outstanding Invoices

Most recent quote amount

OTHER CHANGES & SUGGESTIONS
REMOVE gaps by resizing cards. Cards like 📆 Smart Calendar and 💬 Command History can be half width.

MOVE admin-only or static info (e.g. "Logger health", "API sync") to Control Panel view.

Replace dummy stats (blank, 0, "") with either:

0 styled with muted gray until active

-- or N/A if data source is missing

HOW TO WIRE IT (FOR REPLIT TEAM)
All cards use Airtable API via a wrapper file (airtable_client.py)

Use correct base ID + table name from updated inventory

Frontend should request /api/metrics or per-metric route every 15–30 seconds

Replace hardcoded placeholders with dynamic values using fetch → useEffect() (React) or WebSocket stream

Ensure all cards have a status prop (e.g. ready, loading, offline) and colored badge

Create metrics_worker.py to query Airtable, format response JSON, and push to frontend

